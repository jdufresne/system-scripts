#!/usr/bin/env python3

import argparse
import os
import pathlib
import shutil
import urllib

import requests


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--token", required=True)
    parser.add_argument("--remove", action="store_true")
    parser.add_argument("path", type=pathlib.Path)
    return parser.parse_args()


def get_github(path, *, token, params=None):
    BASE = "https://api.github.com"
    url = urllib.parse.urljoin(BASE, path)
    headers = {
        "Accept": "application/vnd.github.v3+json",
        "Authorization": f"token {token}",
    }
    response = requests.get(url, headers=headers, params=params)
    response.raise_for_status()
    return response


def main():
    args = parse_args()

    response = get_github("/user", token=args.token)
    user = response.json()

    all_repos = set()

    page = 0
    while True:
        page += 1
        params = [("type", "owner"), ("page", page)]
        response = get_github(user["repos_url"], token=args.token, params=params)
        repos = response.json()
        if not repos:
            break

        for repo_info in repos:
            all_repos.add(repo_info["name"])

    unknown = set(os.listdir(args.path)) - all_repos
    for d in sorted(unknown):
        print(d)
        if args.remove:
            shutil.rmtree(args.path / d)


if __name__ == "__main__":
    main()
