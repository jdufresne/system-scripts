#!/usr/bin/env python

import getpass
import multiprocessing
import subprocess
from pathlib import Path


def main():
    p = subprocess.run(
        ["git", "rev-parse", "--show-toplevel"],
        capture_output=True,
        text=True,
        check=True,
    )
    root = Path(p.stdout.strip())
    project = root.name
    dumps = Path.home().joinpath("dumps")
    user = getpass.getuser()

    database = f"{project}_template"

    subprocess.run(["docker", "pull", "postgres"], check=True)

    subprocess.run(
        [
            "docker",
            "run",
            "--rm",
            "--network",
            "postgres",
            "postgres",
            "dropdb",
            "--host",
            "postgres",
            "--user",
            user,
            "--force",
            "--if-exists",
            database,
        ],
        check=True,
    )
    subprocess.run(
        [
            "docker",
            "run",
            "--rm",
            "--network",
            "postgres",
            "postgres",
            "createdb",
            "--host",
            "postgres",
            "--user",
            user,
            database,
        ],
        check=True,
    )
    subprocess.run(
        [
            "docker",
            "run",
            "--rm",
            "--network",
            "postgres",
            "--volume",
            f"{dumps}:{dumps}:z",
            "postgres",
            "pg_restore",
            "--host",
            "postgres",
            "--user",
            user,
            "--dbname",
            database,
            "--exit-on-error",
            "--jobs",
            f"{multiprocessing.cpu_count()}",
            "--no-owner",
            "--verbose",
            dumps.joinpath(f"{project}-scrubbed.dump"),
        ],
        check=True,
    )
    subprocess.run(["vacuumdb", "--analyze", database], check=True)


if __name__ == "__main__":
    main()
